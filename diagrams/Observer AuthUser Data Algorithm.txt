AuthUser Data Algorithm

interface class Subject
{
	protected observerList: array of Observer
	public void register(Observer)
	public void unregister(Observer)
	public void notify()
}
class AuthUser Data implements Subject
{
	private int is_superuser, is_staff, is_active
	private string password, last_login, username, first_name, last_name, email, date_joined
	public void register(Observer obs)
		observerList.add(obs)
	public void unregister(Observer obs)
		observerList.delete(obs)
	public void notify()
		for each obs in observerList
			obs.update(is_superuser, is_staff, is_active, password, last_login, username, first_name, last_name, email, date_joined)
	public void sendAuthUser() //calls notify()
	public type getState()
		return subjectState
}


interface class Observer
{
	public void update(int, int, int, string, string, string, string, string, string, string)
}
class authUser implement Observer
{
	private int is_superuser, is_staff, is_active
	private string password, last_login, username, first_name, last_name, email, date_joined
	public void update(int is_superuserX, int is_staffX, int is_activeX, astring passwordX, string last_loginX, string usernameX, string first_nameX, string last_nameX, string emailX, string date_joinedX)
	{
		is_superuser = is_superuserX
		is_staff = is_staffX
		is_active = is_activeX
		password = passwordX
		last_login = last_loginX
		username = usernameX
		first_name = first_nameX
		last_name = last_nameX
		email = emailX
		date_joined = date_joinedX
		displayView()
	}
	public void displayView()
}