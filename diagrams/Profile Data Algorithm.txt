Profile Data Algorithm

interface class Subject
{
	protected observerList: array of Observer
	public void register(Observer)
	public void unregister(Observer)
	public void notify()
}
class ProfileData implements Subject
{
	private int id
	private string user, name, email, username, created
	public void register(Observer obs)
		observerList.add(obs)
	public void unregister(Observer obs)
		observerList.delete(obs)
	public void notify()
		for each obs in observerList
			obs.update(id, user, name, email, username, created)
	public void sendProfile() //calls notify()
	public type getState()
		return subjectState
}


interface class Observer
{
	public void update(int, string, string, string, string, string)
}
class profiles implement Observer
{
	private int id
	private string user, name, email, username, created
	public void update(int idX, string userX, string nameX, string emailX, string usernameX, string createdX)
	{
		id = idX
		user = userX
		name = nameX
		email = emailX
		username = usernameX
		created = createdX
		displayView()
	}
	public void displayView()
}