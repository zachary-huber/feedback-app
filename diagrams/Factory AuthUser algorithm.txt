class AuthUserSimpleFactory
{
	public AuthUser createAuthUser(string type)
	if (type == "AuthUser1") return new AuthUser1()
	else if (type == "AuthUser2") return new AuthUser2()
		.
		.
		.
		else if (type == "AuthUserN") return new AuthUserN() 
}
class User1
{
	private AuthUserSimpleFactory sfo
	public AuthUser requestAuthUser(string type)
	{
		AuthUser myAuthUser = sfo.createAuthUser(type)
		myAuthUser.register()
		return myAuthUser
	{	
}
.
.
.
class UserN
{
	private AuthUserSimpleFactory sfo
	public AuthUser requestAuthUser(string type)
	{
		AuthUser myAuthUser = sfo.createAuthUser(type)
		myAuthUser.register()
		return myAuthUser
	{	
}
abstract class AuthUser
{
	protected password, last_login, username, first_name, last_name, email, date_joined: string
	protected is_superuser, is_staff, is_active: int
	public void register()	
	{ }
}
class AuthUser1 extends AuthUser
{
	AuthUser1() //assign values entered by the user during registration
	{
		password = "password1"
		last_login = "last_login1"
		username = "username1"
		first_name = "first_name1"
		last_name = "last_name1"
		email = "email1"
		date_joined = "date_joined1"
		is_superuser = 0
		is_staff = 0
		is_active = 1
	}
	public void register()
	{ }
}
.
.
.
class AuthUserN extends AuthUser
{
	AuthUserN() //assign user entered values during registration
	{
		password = "passwordN"
		last_login = "last_loginN"
		username = "usernameN"
		first_name = "first_nameN"
		last_name = "last_nameN"
		email = "emailN"
		date_joined = "date_joinedN"
		is_superuser = 0
		is_staff = 0
		is_active = 1
	}
	public void register()
	{ }
}



